version: 2.1
orbs:
  android: circleci/android@2.1.2
_run:
  jceinstall: &jceinstall
    name: "Download JCE unlimited strength policy to allow the 256 bit keys"
    command: |
      curl -L --cookie 'oraclelicense=accept-securebackup-cookie;'  http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip -o /tmp/jce_policy.zip
      unzip -o /tmp/jce_policy.zip -d /tmp
      sudo mv -f /tmp/UnlimitedJCEPolicyJDK8/US_export_policy.jar $JAVA_HOME/jre/lib/security/US_export_policy.jar
      sudo mv -f /tmp/UnlimitedJCEPolicyJDK8/local_policy.jar $JAVA_HOME/jre/lib/security/local_policy.jar
  javaversion: &javaversion
    name: "Report Java JDK Version being used"
    command: |
      echo ${JAVA_HOME}
  restorecache: &restorecache
    name: "Download and Cache Dependencies"
    keys:
      - v1-dependencies-{{ checksum "pom.xml" }}
      # fallback to using the latest cache if no exact match is found
      - v1-dependencies-

  installjava14: &installjava14
    name: "Download and install Java 14 from source OpenJDK"
    command: |
      JDK14_URL=https://download.java.net/java/GA/jdk14/076bab302c7b4508975440c56f6cc26a/36/GPL/openjdk-14_linux-x64_bin.tar.gz
      wget $JDK14_URL -O /tmp/openjdk14.tar.gz
      tar -xvzf /tmp/openjdk14.tar.gz
      sudo mv jdk-14/ /usr/lib/jvm/
  installjava15: &installjava15
    name: "Download and install Java 15 from source OpenJDK"
    command: |
      JDK15_URL=$(curl -s https://jdk.java.net/15/ | egrep -o "https://download.java.net/java/GA/jdk15.*?/.*?linux-x64.*?tar.gz" | head -1)
      wget $JDK15_URL -O /tmp/openjdk15.tar.gz
      tar -xvzf /tmp/openjdk15.tar.gz
      sudo mv jdk-15.0.1/ /usr/lib/jvm/
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: cimg/node:19.0
    steps:
      - checkout
      - run:
          name: update-npm
          command: "sudo npm install -g npm@8.19"
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-packages
          command: npm install
      - run:
          name: install ionic cli
          command: "sudo npm install -g @ionic/cli"
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: build
          command: ionic build --prod
      - run:
          name: sync capacitor
          command: npx cap sync
      - run:
          name: build android
          path: ./android
          command: ./gradlew assembleDebug
