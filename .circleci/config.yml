version: 2.1
workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - cypress/run:
          name: cypress-run
          requires:
            - build
          record: true
          parallel: true
          group: 'cypress'
          spec: 'cypress/integration/**/*'
          browser: 'chrome'
          start: 'npm run start'
          wait-on: 'http://localhost:4200'
          wait-on-timeout: 300
      - build_ios:
          requires:
            - cypress/run
      - build_android:
            requires:
            - cypress/run
orbs:
  ios-fastlane: storytel/ios-fastlane@1.6.0
  android: circleci/android@2.1.2
jobs:
  cypress/run:
    docker:
      - image: cypress/browsers:node18.16.1-chrome89-ff86
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run Cypress
          command: npm run cypress:run
  build_ios:
    working_directory: ~/repo
    macos:
      xcode: 14.0.0
    steps:
      - checkout
      - run:
          name: Install NPM
          command: "sudo npm install -g npm@8.19"
      - run:
          name: Install npm dependencies
          command: npm install
      - run:
          name: Install ionic cli
          command: "sudo npm install -g @ionic/cli"
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build ionic app
          command: ionic build --prod
      - run:
          name: Sync capacitor
          command: npx cap sync
      - run:
          name: Build ionic capacitor app
          command: ionic capacitor build ios
      - run:
          name: Install homebrew
          command: |
              /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - run:
          name: Install ruby for fastlane
          command: brew install ruby
      - run:
          name: Install fastlane
          command: |
            sudo gem install fastlane -NV
            fastlane -v
      - run:
          name: Build ios app
          path: ios/App
          command: |
            fastlane ios build_ios
  build_android:
    working_directory: ~/repo
    docker:
      - image: cimg/android:2022.09-node
    steps:
      - checkout
      - run:
          name: Install NPM
          command: "sudo npm install -g npm@8.19"
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm dependencies
          command: npm install
      - run:
          name: install ionic cli
          command: "sudo npm install -g @ionic/cli"
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build ionic app
          command: ionic build --prod
      - run:
          name: Sync capacitor
          command: npx cap sync
      - run:
          name: Build android capacitor app
          command: ionic capacitor build android
      - run:
          name: Install ruby for fastlane
          command: sudo apt-get install ruby-full
      - run:
          name: Install fastlane
          command: |
            sudo gem install fastlane -NV
            fastlane -v
      - run:
          name: Install android dependencies
          path: android
          command: |
            ./gradlew androidDependencies --debug
      - run:
          name: Build android app
          path: android
          command: |
            fastlane android generate_bundle_release
      - store_artifacts:
          path: android/app/build/outputs/bundle
